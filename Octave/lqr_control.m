pkg load symbolic
pkg load control

M = 0.308;
m = 0.123;
L = 0.186;
g = 9.81;
b = 0.3;

A = [0 1 0 0; 0 -b/M g*m/M 0; 0 0 0 1; 0 -b/M/L g*(M+m)/M/L 0];
B = [0; 1/M; 0; 1/M/L];
C = [0 1 0 0];
D = [ 0 ];

#stname = {‘x’,‘xdot’,‘th’,’thdot’};
#sys = ss(a, b, ‘stname’, stname);
sys = ss(A, B);

%R = .045;
R = .045;

%16.6
Q = [3 0 0 0; 0 1 0 0; 0 0 100 0; 0 0 0 10];

%16.5
%Q = [12 0 0 0; 0 4 0 0; 0 0 100 0; 0 0 0 10];

%16.4
%Q = [12 0 0 0; 0 0.1 0 0; 0 0 100 0; 0 0 0 10];

%16.3
%Q = [17 0 0 0; 0 1 0 0; 0 0 100 0; 0 0 0 10];

%16.2
%Q = [12 0 0 0; 0 10 0 0; 0 0 100 0; 0 0 0 10];

%1.46
%Q = [50 0 0 0; 0 100 0 0; 0 0 5 0; 0 0 0 1000];

%1.45
%Q = [50 0 0 0; 0 100 0 0; 0 0 5 0; 0 0 0 150];

%1.44
%Q = [50 0 0 0; 0 20 0 0; 0 0 5 0; 0 0 0 70];

%1.43
%Q = [20 0 0 0; 0 20 0 0; 0 0 1 0; 0 0 0 50];

%1.42
%Q = [10 0 0 0; 0 20 0 0; 0 0 1 0; 0 0 0 30];

%1.41
%Q = [15 0 0 0; 0 10 0 0; 0 0 20 0; 0 0 0 30];

%1.1
%Q = [1 0 0 0; 0 1 0 0; 0 0 80 0; 0 0 0 10];

%1.2
%Q = [1 0 0 0; 0 1 0 0; 0 0 60 0; 0 0 0 10];

%1.3
%Q = [1 0 0 0; 0 1 0 0; 0 0 40 0; 0 0 0 10];

%1.31
%Q = [1 0 0 0; 0 1 0 0; 0 0 25 0; 0 0 0 10];

%1.32
%Q = [1 0 0 0; 0 1 0 0; 0 0 20 0; 0 0 0 10];

%1.33
%Q = [1 0 0 0; 0 1 0 0; 0 0 15 0; 0 0 0 10];

%1.4
%Q = [12 0 0 0; 0 5 0 0; 0 0 80 0; 0 0 0 20];

%16 ** lets test this alone
%Q = [12 0 0 0; 0 1 0 0; 0 0 100 0; 0 0 0 10];

%16.1
%Q = [12 0 0 0; 0 20 0 0; 0 0 100 0; 0 0 0 100];

%100
%Q = [120 0 0 0; 0 1 0 0; 0 0 100 0; 0 0 0 1000];
%101
%Q = [120 0 0 0; 0 1000 0 0; 0 0 100 0; 0 0 0 10000];

%102 ** this is the right idea. lets tone down theta dot. say 2500
%Q = [120 0 0 0; 0 500 0 0; 0 0 100 0; 0 0 0 5000];

%102.1
%Q = [120 0 0 0; 0 500 0 0; 0 0 100 0; 0 0 0 2500];

%103
%Q = [120 0 0 0; 0 10000 0 0; 0 0 100 0; 0 0 0 1000];
%104
%Q = [120 0 0 0; 0 5000 0 0; 0 0 100 0; 0 0 0 1000];


K = lqr(A, B, Q, R);
abk = A - B*K;

printf("abk.rows = 4;\n");
printf("abk.cols = 4;\n");

c = 0;
for j = 1:4
	printf("abk.elements[%d][0] = %f;\n", c, abk(j,1));
	printf("abk.elements[%d][1] = %f;\n", c, abk(j,2));
	printf("abk.elements[%d][2] = %f;\n", c, abk(j,3));
	printf("abk.elements[%d][3] = %f;\n\n", c, abk(j,4));
	c += 1;
endfor

printf("k.rows = 1;\n");
printf("k.cols = 4;\n");

c = 0;
for i = K
	printf("k.elements[0][%d] = %f;\n", c, i);
	c += 1;
endfor